{"version":3,"sources":["img/edit.svg","img/trash.svg","img/github.svg","img/clear.svg","components/lists.jsx","components/form.jsx","Todolist.js","index.js"],"names":["module","exports","Lists","props","className","onClick","onSelect","id","src","cancel","alt","onSelectEdit","edit","text","Form","type","onChange","textInputChange","placeholder","value","textValue","textButtonClick","Todolist","useState","initInput","updateInput","initItem","updateItem","deleteItem","oldItems","filter","arrElement","index","editItem","document","getElementById","focus","window","onload","href","target","github","width","action","onSubmit","e","preventDefault","event","map","val","key","clear","ReactDOM","render","StrictMode"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,+KCgB5BC,EAZD,SAACC,GACb,OACE,oCACA,yBAAKC,UAAU,SACb,4BAAQC,QAAU,kBAAMF,EAAMG,SAASH,EAAMI,MAA7C,IAAmD,yBAAKC,IAAKC,IAAQC,IAAI,WAAzE,KACA,4BAAQL,QAAU,kBAAMF,EAAMQ,aAAaR,EAAMI,MAAjD,IAAuD,yBAAKC,IAAKI,IAAMF,IAAI,SAA3E,KACA,4BAAKP,EAAMU,SCYFC,EApBF,SAACX,GACZ,OACE,oCACE,6BACE,2CAEF,yBAAKC,UAAU,cACb,2BACEW,KAAK,OACLR,GAAG,WACHS,SAAUb,EAAMc,gBAChBC,YAAY,cACZC,MAAOhB,EAAMiB,YAEf,4BAAQf,QAASF,EAAMkB,iBAAvB,U,wCCyEOC,EAjFE,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACdC,EADc,KACHC,EADG,OAEUF,mBAAS,IAFnB,mBAEdG,EAFc,KAEJC,EAFI,KAiBfC,EAAa,SAACrB,GAClBoB,GAAW,SAACE,GACV,OAAOA,EAASC,QAAO,SAACC,EAAYC,GAClC,OAAOzB,IAAOyB,SAKdC,EAAW,SAAC1B,GAChBqB,EAAWrB,GACXkB,EAAYC,EAASnB,IACrB2B,SAASC,eAAe,YAAYC,SAetC,OAJAC,OAAOC,OAAS,WACdJ,SAASC,eAAe,YAAYC,SAIpC,oCACE,yBAAKhC,UAAU,aACb,uBAAGmC,KAAK,gCAAgCC,OAAO,UAC7C,yBAAKhC,IAAKiC,IAAQ/B,IAAI,SAASgC,MAAM,QAEvC,yBAAKtC,UAAU,QACb,0BAAMuC,OAAO,GAAGC,SAfH,SAACC,GACpBA,EAAEC,mBAeM,kBAAC,EAAD,CACE1B,UAAWI,EACXP,gBAjDQ,SAAC8B,GACnBtB,EAAYsB,EAAMP,OAAOrB,QAiDfE,gBA9CI,WACI,KAAdG,IACFG,GAAW,SAACE,GACV,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEvBC,EAAY,QA2CN,yBAAKlB,GAAG,QACN,4BACGmB,EAASsB,KAAI,SAACC,EAAKjB,GAClB,OACE,kBAAC,EAAD,CACEnB,KAAMoC,EACNC,IAAKlB,EACLzB,GAAIyB,EACJ1B,SAAUsB,EACVjB,aAAcsB,SAMxB,4BAAQ7B,UAAU,YAAYC,QAxCvB,WACfsB,EAAW,MAwCD,yBAAKnB,IAAK2C,IAAOzC,IAAI,oBC5EnC0C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpB,SAASC,eAAe,W","file":"static/js/main.ad258d19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit.27d86101.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.61d68353.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.2ed6ccfe.svg\";","import React from \"react\";\r\nimport edit from \"../img/edit.svg\";\r\nimport cancel from \"../img/trash.svg\";\r\n\r\nconst Lists = (props) => {\r\n  return (\r\n    <>\r\n    <div className=\"lists\">\r\n      <button onClick={ () => props.onSelect(props.id)}> <img src={cancel} alt=\"cancel\"/> </button>\r\n      <button onClick={ () => props.onSelectEdit(props.id)}> <img src={edit} alt=\"edit\"/> </button>\r\n      <li>{props.text}</li>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;","import React from \"react\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>TO-DO-LIST</h2>\r\n      </div>\r\n      <div className=\"inputfield\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"inputbox\"\r\n          onChange={props.textInputChange}\r\n          placeholder=\"Add an item\"\r\n          value={props.textValue}\r\n        />\r\n        <button onClick={props.textButtonClick}>ADD</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\nimport Lists from \"./components/lists\";\nimport Form from \"./components/form\";\nimport \"./css/Todolist.css\";\nimport github from \"./img/github.svg\";\nimport clear from \"./img/clear.svg\";\n\n\nconst Todolist = () => {\n  const [initInput, updateInput] = useState(\"\");\n  const [initItem, updateItem] = useState([]);\n\n  const inputChange = (event) => {\n    updateInput(event.target.value);\n  };\n\n  const addItem = () => {\n    if (initInput !== \"\") {\n      updateItem((oldItems) => {\n        return [...oldItems, initInput];\n      });\n      updateInput(\"\");\n    }\n  };\n\n  const deleteItem = (id) => {\n    updateItem((oldItems) => {\n      return oldItems.filter((arrElement, index) => {\n        return id !== index;\n      });\n    });\n  };\n\n  const editItem = (id) => {\n    deleteItem(id);\n    updateInput(initItem[id]);\n    document.getElementById(\"inputbox\").focus();\n  };\n\n  const clearAll = () => {\n    updateItem([]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  window.onload = function () {\n    document.getElementById(\"inputbox\").focus();\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <a href=\"https://github.com/AdarshJaso\" target=\"_blank\">\n          <img src={github} alt=\"github\" width=\"9%\" />\n        </a>\n        <div className=\"card\">\n          <form action=\"\" onSubmit={handleSubmit}>\n            <Form\n              textValue={initInput}\n              textInputChange={inputChange}\n              textButtonClick={addItem}\n            />\n            <div id=\"list\">\n              <ul>\n                {initItem.map((val, index) => {\n                  return (\n                    <Lists\n                      text={val}\n                      key={index}\n                      id={index}\n                      onSelect={deleteItem}\n                      onSelectEdit={editItem}\n                    />\n                  );\n                })}\n              </ul>\n            </div>\n            <button className=\"clear-btn\" onClick={clearAll}>\n              <img src={clear} alt=\"clear-all\" />\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Todolist;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todolist from './Todolist';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todolist />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}